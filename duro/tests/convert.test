#!/bin/sh
# Execute tclsh from the user's PATH \
exec tclsh "$0"

# $Id$
#
# Test conversion operators
#

package require tcltest 2.2
eval ::tcltest::configure $argv
namespace import ::tcltest::*

source [file dirname [info script]]/setup.tcl

test convert {type conversions} -setup $SETUP -body {
    set dbenv [duro::env open [configure -tmpdir]/dbenv]

    # Create Database
    duro::db create $dbenv TEST

    set tx [duro::begin $dbenv TEST]

    # Create real table
    duro::table create T1 {
       {A INTEGER}
       {B FLOAT}
       {C STRING}
    } {{A}} $tx
    
    # Insert tuple
    duro::insert T1 {A 1 B 2.0 C 03} $tx
    
    duro::table expr -global X {EXTEND T1 : {
            A_I := A, A_R := CAST_AS_FLOAT(A) * 2.0, A_S := "S" || CAST_AS_STRING(A),
            B_I := CAST_AS_INTEGER(B), B_R := B * 2.0, B_S := "S" || CAST_AS_STRING(B),
            C_I := CAST_AS_INTEGER(C), C_R := CAST_AS_FLOAT(C) * 2.0, C_S := "S" || C,
            B_F := B}
    } $tx

    duro::commit $tx

    # Close DB environment
    duro::env close $dbenv

    # Reopen DB environment
    set dbenv [duro::env open [configure -tmpdir]/dbenv]
    
    set tx [duro::begin $dbenv TEST]
    
    set tpl [duro::expr {TUPLE FROM X} $tx]
    
    set stpl {A 1 B 2.0 C 03 A_I 1 A_R 2.0 A_S S1 B_I 2 B_R 4.0 B_S S2
            C_I 3 C_R 6.0 C_S S03 B_F 2.0}
    if {![tequal $tpl $stpl]} {
        error "Tuple should be $tpl, but is $stpl"
    }
    
    duro::commit $tx
}

cleanupTests