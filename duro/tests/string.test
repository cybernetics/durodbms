#!/bin/sh
# Execute tclsh from the user's PATH \
exec tclsh "$0" ${1+"$@"}

# $Id$
#
# Test string operators
#

package require tcltest 2.2
eval ::tcltest::configure $argv
namespace import ::tcltest::*

source [file dirname [info script]]/setup.tcl

test string {string functions} -setup $SETUP -body {
    set dbenv [duro::env open -create [configure -tmpdir]/dbenv]

    # Create Database
    duro::db create $dbenv TEST
    
    set tx [duro::begin $dbenv TEST]
    
    set len [duro::expr {length("Ab-")} $tx]
    if {$len != 3} {
        error "wrong string length: $len"
    }

    # Single-quote string
    set str [duro::expr {'\"\t"\\'} $tx]
    if {![string equal $str {\"\t"\\}]} {
        error "wrong string value: $str"
    }

    # Double-quote string
    set str [duro::expr {"\"\t\\"} $tx]
    if {![string equal $str "\"\t\\"]} {
        error "wrong string value: $str"
    }

    set str [duro::expr {substring("ABC-.+abc", 2, 3)} $tx]
    if {$str != "C-."} {
        error "wrong string value: $str"
    }
    
    set str [duro::expr {substring('ABC-.+ab', 2, 6)} $tx]
    if {$str != "C-.+ab"} {
        error "wrong string value: $str"
    }
    
    set str [duro::expr {substring("ABC-.+ab", 0, 8)} $tx]
    if {$str != "ABC-.+ab"} {
        error "wrong string value: $str"
    }
    
    if {![catch {[duro::expr {substring("ABC-.+ab", 2, 7)} $tx]}]} {
        error "should have failed"
    }
    
    if {![catch {[duro::expr {substring("ABC-.+ab", 0, 9)} $tx]}]} {
        error "should have failed"
    }

    duro::commit $tx
    
    # Close DB environment
    duro::env close $dbenv
}

cleanupTests
