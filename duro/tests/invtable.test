#!/bin/sh
# Execute tclsh from the user's PATH \
exec tclsh "$0" ${1+"$@"}

#
# Test creation of table with invalid definition
#

package require tcltest 2.2
eval ::tcltest::configure $argv
namespace import ::tcltest::*

source [file dirname [info script]]/setup.tcl

test invtable {invalid table definitions} -setup $SETUP -body {
    set dbenv [duro::env open $dbenvname]

    # Create Database
    duro::db create $dbenv TEST
    
    set tx [duro::begin $dbenv TEST]
    
    #
    # Try to create table with invalid definitions
    #
    
    if {![catch {
       duro::table create "T 1" {
           {A integer}
       } {{A}} $tx
    }]} {
        error "table creation should fail, but succeeded"
    }
    if {![string match invalid_argument_error* [lindex $::errorCode 1]]} {
        error "unexpected errorCode: $::errorCode"
    }

    if {![catch {
        duro::table drop "T 1" $tx
    }]} {
        error "table \"T 1\" should not exist, but does"
    }

    if {![catch {
        duro::table create T1 {
            {A integer}
            {{A B} integer}
        } {{A}} $tx
    }]} {
        error "table creation should fail, but succeeded"
    }
    if {![string match {invalid_argument_error*A B*} [lindex $::errorCode 1]]} {
        error "invalid errorCode: $::errorCode"
    }
    
    if {![catch {
        duro::table create T1 {
            {A integer}
            {A string}
        } {{A}} $tx
    }]} {
        error "creation of table T1 should fail, but succeeded"
    }
    
    if {![catch {
        duro::table drop T1 $tx
    }]} {
        error "table T1 should not exist, but does"
    }
    
    if {![catch {
        duro::table create T2 {
           {A1 string}
           {A2 string}
        } {{A1 A1}} $tx
    }]} {
        error "creation of table T2 should fail, but succeeded"
    }
    
    if {![catch {
        duro::table drop T2 $tx
    }]} {
        error "table T2 should not exist, but does"
    }
    
    if {![catch {
        duro::table create T3 {
           {A1 string}
           {A2 string}
        } {{A1} {A1 A2}} $tx
    }]} {
        error "creation of table T3 should fail, but succeeded"
    }
    
    if {![catch {
        duro::table drop T3 $tx
    }]} {
        error "table T3 should not exist, but does"
    }
    
    duro::table create T {{A integer}} {{A}} $tx

    if {![catch {
        duro::table expr X {EXTEND T ADD (C AS B)} $tx
    }]} {
        error "creation of table X should fail, but succeeded"
    }

    if {![catch {
        duro::table expr P {T {ALL BUT A, A}} $tx
    }]} {
        error "creation of table P should fail, but succeeded"
    }
    
    duro::rollback $tx
    
    # Close DB environment
    duro::env close $dbenv
}

cleanupTests
