$Id$

Summary of Changes for Duro

Changes for Duro 0.15

- Duro D/T: Changed WITH and EXTEND syntax according to Database Explorations.

- Duro D/T now supports headings in relation selectors.

- Duro D/T sets LC_CTYPE and LC_COLLATE locales according to the environment.

- Added RDB_is_selector().

- Removed RDB_tx_env().

- Added aggregate operators AND and OR as synonyms for ALL and ANY.

- Added XOR.

- Added TUP, REL, DEE, and DUM as synonyms for TUPLE, RELATION, TABLE_DEE
  and TABLE_DUM.

- Changed interface and calling conventions for user-defined operators.

- Added RDB_get_update_op to the public interface. Renamed RDB_call_ro_op
and RDB_call_update_op as RDB_call_ro_op_by_name and RDB_call_update_op_by_name.
Added RDB_call_update_op with new semantics.

- Conversion of expressions etc. to string is now part of the core.

- File I/O

- Upgrade to Berkeley DB 5.2. (But older versions should work too)

- Store user-defined operators as source code

- RDB_expr_type now always raises an error if the type could not be determined.

- Change in catalog table SYS_POSSREPCOMPS

- Changed type handling in RDB_evaluate(), RDB_call_ro_op(), and
  RDB_call_update_op(),

Duro D/T:

- LEAVE is now supported

- Improved array support

- Non-scalar types allowed as possrep components

- Changed FOR/DO to allow for zero iterations

Changes for Duro 0.14

- Upgraded to Berkeley DB 4.7.

- Duro D/T now supports CASE and constraints.

- Added exception handling to Duro D/T.

- Dropped first argument of CONNECT.

- The return type is now explicitly passed to functions which implement
  read-only operators.

- Single quotes are now used in data output in Tutorial D form.

- If a type is not found, NAME_ERROR is raised instead of NOT_FOUND_ERROR.

- Added limited type implementation functionality to Duro D/T.

- Added operator GETENV.

Changes for Duro 0.13

- Renamed build target "check" to "test".

- Upgraded to Berkeley DB 4.6.

- Removed arguments ltfnp, arg, and txp from parsing functions.

- Added RDB_type_is_relation().

- Added built-in operators TUPLE and RELATION.

- Dropped argc argument of RDB_ro_op().

- RDB_insert() and RDB_multi_assign() now support inserting tables.

- RDB_table_to_array() now supports two modes (buffered and unbuffered).

- Implemented interpreter Duro D/T.

- Fixed bug in Duroadmin - now uses correct floating-point type.

- Replaced ATTRIBUTE_NOT_FOUND_ERROR by NAME_ERROR.

- Renamed INVALID_TRANSACTION_ERROR to NO_RUNNING_TX_ERROR
  and RDB_raise_invalid_tx() to RDB_raise_no_running_tx().

- Dropped type DOUBLE. FLOAT is now double precision.

- Lexer: removed leading "-" from number literals.

- Using doxygen for the documentation.

Changes for Duro 0.12

- Replaced GNU Autotools by SCons.

- Using tcltest for testing.

- Changed interface for creating read-only operator expressions.

- Replaced RDB_table by RDB_object.

- Replaced RDB_project(), RDB_union() etc. by RDB_expr_to_vtable()

- Removed RDB_expr_any(), RDB_expr_all(), etc.

- Added RDB_init_table() and RDB_init_table_from_type() for creating
  local tables; removed argument 'global' from RDB_create_table()
  and RDB_create_table_from_type().

- Added RDB_table_is_persistent() and RDB_table_is_real().

- Added RDB_dup_nonscalar_type().

- Renamed RDB_expr_var() to RDB_var_ref().

- Removed RDB_parse_table().

- Changes to expression syntax for better conformance with TTM, third
  edition.

Changes for Duro 0.11

- Added RDB_type_attrs().

- Removed RDB_set_errfile(), RDB_get_errfile(), RDB_set_errfn(),
  and RDB_get_errfn().

- Durotcl: Added duro::env seterrfile. dberror is no longer called.

- Bugfixes.

Changes for Duro 0.10

- Replaced RDB_RATIONAL by RDB_FLOAT and RDB_DOUBLE.

- RDB_update() and RDB_delete return the number of tuples updated or
  deleted, respectively.

- Added option --without-tcl to configure.

- RDB_cardinality() returns an RDB_int.

- Added SEMIMINUS and SEMIJOIN.

- Redesigned the API, using scalar types for returning error information
  instead of a numerical error code.

- Added IF operator.

- Dropped catalog table SYS_POSSREPS.

- Implemented RDB_multi_assign().

- Durotcl uses Tutorial D syntax to represent values of user-defined
  types. The comparison operator is passed the actual representation.

- Read-only operators can access the current transaction if called from Tcl.

- Changed expression grammar to allow empty attribute name lists and empty
  expression lists.

- Now supporting general relation-valued expressions.

- Now supporting a user-defined comparison operator for user-defined types.

- Type constraints are now specified outside of possible representations.

- Fixed problem with error dialogs in Durotcl.

- Implemented RDB_create_constraint() and RDB_drop_constraint().

- Replaced RDB_expr_attr() by RDB_exp_var().

- A call failing for a system error no longer always results in
  an implicit rollback.

- Bugfixes.

- Single quotes are now supported in addition to double quotes
  as delimiters in string literals.

Changes for Duro 0.9

- Documented utilities in utils.html.

- Upgraded to Berkeley DB 4.3.

- Added dump utility Durodump.

- Added help menu and version information to Duroadmin.

- Added B-tree indexes.

- RDB_set_table_name() now works for global tables.

- Replaced RDB_user_op() by RDB_ro_op() and RDB_ro_op_va().

- Dropped RDB_neq() etc., replaced by RDB_ro_op() and RDB_ro_op_va().

- Added transaction argument to RDB_select(), RDB_extend(), and
  RDB_summarize().

- Added built-in operators LENGTH, SUBSTRING, IS_EMPTY, COUNT, and SUBSET_OF.

- Added conversion operators, arithmetical operators, etc., as built-in
  operators.

- Durotcl now supports creating tables with user-defined types.

- Implemented duro::table rename and duro::table def.

- Changed duro::table attrs.

- Changed argument order of duro::db to conform with duro::begin.

- Expressions now support backslash escaping in strings.

- Changed expression grammar so that expressions like A UNION B UNION C
  are now possible.

- Minor change to RDB_expression struct.

- Removed RDB_begin_uoi() and RDB_end_uoi() from the API specification.

- Fixed bugs in the library and Duroadmin.

- The obsolete program lstables is no longer installed.

Changes for Duro 0.8

- Introduced error code RDB_ATTRIBUTE_NOT_FOUND.

- Implemented RDB_insert() for RENAME, WRAP, UNWRAP tables.

- Implemented RDB_project_tuple() and RDB_join_tuples().

- Implemented RDB_update() for selection tables.

- Implemented RDB_delete() for EXTEND tables.

- Implemented RDB_create_table_index() and RDB_drop_table_index().

- Implemented RDB_table_equals().

- Implemented RDB_expr_contains().

- RDB_create_table() does now more complete argument checking.

- Added query optimizer.

- RDB_binary_get() now returns a pointer to the data instead of copying it.

- Now allowing nonscalar types as operator argument and return types.

- Now allowing nonscalar types as actual representations.

- Added SUBSET operator.

- Implemented GROUP and UNGROUP.

- Implemented support for system-implemented user-defined types with
  more than one possrep component.

- Changed RDB_create_tuple_type() and RDB_create_relation_type(), which now
  return an error code.

- Changed argument order of RDB_extract_tuple() and RDB_call_ro_op().

- Implemented relation-valued table attributes.

- Implemented array-valued attributes and RDB_create_array_type().

- Removed the libname argument from RDB_implement_type(). Selectors,
  getters, and setters are now created using RDB_create_ro_op() and
  RDB_create_update_op().

- Removed RDB_select_obj() and RDB_selector(). Use RDB_call_ro_op() and
  RDB_user_op() instead.

- Removed RDB_create_env().

- Implemented duro::table attrs.

- Implemented RDB_get_dbs() and duro::env dbs.

- Changed semantics of duro::operator create.

- Implemented GUI admin tool.

- duro::insert now raises an error if the tuple is already an element of the
  table.

- duro::array index and duro:array foreach now take a
  transaction argument.

- Durotcl functions now set errorCode.

- Added support for user-defined types in Durotcl through duro::type.

- Added tuple operations and relation literals to the expression parser.

- Fixed WRAP syntax.

- Fixed charset handling of Durotcl expressions.

- Fixed several other bugs.

Changes for Duro 0.7

- Tcl interface, including evaluation of relational expressions in
  Tutorial D syntax. A C interface for expression parsing is provided.

- Implemented RDB_sdivide().

- Implemented tuple-valued table attributes, RDB_wrap(), and RDB_unwrap().

- Implemented RDB_remove().

- Implemented insert into projections.

- Added support for multiplication, division, unary minus, and string
  concatenation in expressions.

- Added RDB_table_to_obj() and RDB_obj_table().

- Renamed RDB_obj_set_XXX() to RDB_XXX_to_obj() and RDB_expr_table() to
  RDB_table_to_expr().

- Dropped RDB_tuple and RDB_array, using RDB_object instead. Renamed
  RDB_array_get_tuple() as RDB_array_get().

- Replaced RDB_make_persistent() by RDB_add_table().

- Fixed bug in RDB_extract_tuple().

- Fixed bug with updating key attributes of tables with more than one
  candidate key.

- Fixed problem with commit/rollback after dropping tables.

- Now using to BerkeleyDB 4.2 (no modifications were required)

Changes for Duro 0.6

- For the sake of uniformity, changed argument order of RDB_table_to_array()

- RDB_array_get_tuple() now obtains a pointer to a RDB_tuple.

- Added sorting (through the seqitc/seqitv arguments of
  RDB_table_to_array())

- Renamed RDB_value as RDB_object. Renamed RDB_init_value() as
  RDB_init_obj(), etc.

- RDB_drop_type now takes a RDB_transaction * argument

- More API changes. A draft API spec is now available.

- Replaced structure RDB_key_attrs by the more general RDB_string_vec.

- Implemented user-defined operators.

- Added support for default table attributes.

- Fixed issue with RDB_update().

- Added error logging.

- RDB_get_table now takes a RDB_transaction * argument.

- Implemented user-defined types.

- Renamed field "type" in RDB_attr as "typ", for the sake of uniformity.

Changes for Duro 0.5

- Added RDB_extract_tuple() to extract a single tuple from a table.

- Bugfixes

- Added regular expression matching (requires POSIX.2 regular expressions)

- Added argument 'options' to RDB_create_env().

- Added support for RENAME and SUMMARIZE PER (except COUNTD, SUMD, and AVGD).

- Changed error handling: Implicit rollback also by other system errors
  than deadlock; added function RDB_is_syserr() for checking for system
  errors.

- Renamed RDB_deinit_XXX functions as RDB_destroy_XXX.

- Now checking table and attribute names: nonprintable characters, whitespace,
  and '$' are not permitted.

- Renamed field 'value' in RDB_virtual_attr as 'exp'.

- Made RDB_rel_table() the only way to create a relational expression.

Changes for Duro 0.4

- Persistent virtual tables now supported through RDB_set_table_name()
  and RDB_make_persistent()

- Releasing databases no longer required before closing the environment

- Added operators < > <= >=

- RDB_init_value(), RDB_init_array(), and RDB_init_tuple() do no longer
  return an error code (the error checking, if necessary, is delayed
  to first use of the variable). This makes initialization/deinitialization
  code much simpler.

- Fixed alignment bug

- Added data type BINARY
